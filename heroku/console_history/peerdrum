User.find(69)
pu = _
pu = User.find(69)
pu.screenshots(47)
pu.screenshots(Project.find(47))
pu.screenshots(Project.find(47)).each {|ss| ss.about["last-modified"] }
pu.screenshots(Project.find(47)).each {|ss| p ss.about["last-modified"] };
pu.screenshots(Project.find(47)).collect {|ss| ss.about["last-modified"] };
pu.screenshots(Project.find(47)).collect {|ss| ss.about["last-modified"].strftimee("%I:%M %p")  };
pu.screenshots(Project.find(47)).collect {|ss| Time.zone.parse(ss.about["last-modified"]).strftime("%I:%M %p")  };
exit
User
Project
exit
Project.find(:all, :limit => 10)
proj = Project.find(24)
proj.assignments
pu = User.find(69)
proj.owner == pu
pu.projects.include?(proj)
Assignment.where(:admin => true).count
Assignment.where(:admin => false).count
exit
User.find_by_perishable_token("vX1kSExcmdJA1RS8Fm-o")
User.find_by_perishable_token("ipT8NLgxWtv_rULOFB8V")
ken = User.find_by_email("ken@fyin.com")
ken.perisable_token
ken.perishable_token
me = User.find_by_email("jim@itsbspoke.com")
me.perishable_token
me.updated_at
me = User.find_by_email("jim@itsbspoke.com")
me.perishable_token
to_xml
me.to_xml
Time.zone.now.to_xml
Time.zone.now.iso8601
Time.utc.now.iso8601
Time.utc.iso8601
Time.now.utc.iso8601
User.first.single_access_token
exit
User.find_by_single_access_token("rpWMz07Y-5N65ZzHm87r")
User.find_by_email("jim.van.fleet+test10@gmail.com
")
User.find_by_email("jim.van.fleet+test10@gmail.com")
u = User.find_by_email("jim+test@jimvanfleet.com")
UserMailer.activation_instructions(u).deliver
new_users = User.limit(5).order("created_at desc")
new_users = User.limit(5).order("created_at desc").collect{ |u| u.email }
User.count
new_users = User.limit(5).order("created_at desc").collect{ |u| u.created_at }
new_users = User.limit(5).order("created_at").collect{ |u| u.created_at }
new_users = User.order("created_at desc").limit(5).collect{ |u| u.created_at }
new_users = User.order("created_at").limit(5).collect{ |u| u.created_at }
User.where(["created_at > ?", 2.weeks.ago])
User.where(["created_at > ?", Date.parse("2012/03/01")])
User.where(["created_at > ?", Date.parse("2012/03/01")]).collect{ |u| u.email }
User.where(["created_at > ?", Date.parse("2012/03/01")]).map{ |u| UserMailer.activation_instructions(u).deliver }
u = User.find_by_email("emerchand@yahoo.com")
